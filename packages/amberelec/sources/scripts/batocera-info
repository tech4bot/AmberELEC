#!/bin/bash

source /etc/os-release

### short version (for osd)
if test "$1" = "--short"
then
    BATT=$(cat /sys/class/power_supply/{BAT,bat}*/uevent 2>/dev/null | grep -E "^POWER_SUPPLY_CAPACITY=" | sed -e s+'^POWER_SUPPLY_CAPACITY='++ | sort -rn | head -1)
    DT=$(date +%H:%M)
    if test -n "${BATT}"
    then
        echo "Battery: ${BATT}% - ${DT}"
    else
        echo "${DT}"
    fi
    exit 0
fi
###

### Fix this
V_OS=${NAME}

TEST=$(ldd /usr/bin/emulationstation | grep 64)
if [ $? == 0 ]
then
  V_OSARCH="aarch64"
else
  V_OSARCH="arm"
fi

V_DEVICE=$(tr -d '\0' < /sys/firmware/devicetree/base/model)
V_CPUNB=$(grep -E $'^processor\t:' /proc/cpuinfo | wc -l)
V_SYSTEM=$(uname -rs)
V_ARCH=$(uname -m)

if [[ $V_DEVICE =~ RG552 ]]; then
  V_CPUMODEL1="Rockchip RK3399"
else
  V_CPUMODEL1="Rockchip RK3326"
fi

if [[ $V_DEVICE =~ RG552 ]]; then
  V_CPUFREQL=$(( $(cat /sys/devices/system/cpu/cpufreq/policy0/scaling_cur_freq) / 1000 ))
  V_CPUMAXFREQL=$(( $(cat /sys/devices/system/cpu/cpufreq/policy0/cpuinfo_max_freq) / 1000 ))
  V_CPUFREQB=$(( $(cat /sys/devices/system/cpu/cpufreq/policy4/scaling_cur_freq) / 1000 ))
  V_CPUMAXFREQB=$(( $(cat /sys/devices/system/cpu/cpufreq/policy4/cpuinfo_max_freq) / 1000 ))
else
  V_CPUFREQ=$(( $(cat /sys/devices/system/cpu/cpufreq/policy0/scaling_cur_freq) / 1000 ))
  V_CPUMAXFREQ=$(( $(cat /sys/devices/system/cpu/cpufreq/policy0/cpuinfo_max_freq) / 1000 ))
fi

# battery
BATT=$(cat /sys/class/power_supply/{BAT,bat}*/uevent 2>/dev/null | grep -E "^POWER_SUPPLY_CAPACITY=" | sed -e s+'^POWER_SUPPLY_CAPACITY='++ | sort -rn | head -1)

# PAD Battery
for PADBAT in /sys/class/power_supply/*/device/uevent
do
    # HID devices only
    PADNAME=$(grep -E '^HID_NAME=' "${PADBAT}" | sed -e s+'^HID_NAME='++)
    if test -n "${PADNAME}"
    then
        # parent of parent / uevent
        BATTUEVENT=$(dirname "${PADBAT}")
        BATTUEVENT=$(dirname "${BATTUEVENT}")/uevent
        BATT=$(grep -E "^POWER_SUPPLY_CAPACITY=" "${BATTUEVENT}" | sed -e s+'^POWER_SUPPLY_CAPACITY='++ | sort -rn | head -1)
        echo "${PADNAME}: ${BATT}%"
    fi
done

# temperature
# Unit: millidegree Celsius
if [[ $V_DEVICE =~ RG552 ]]; then
  TEMPE=$(cat /sys/class/hwmon/hwmon1/temp1_input 2>/dev/null | sort -rn | head -1 | sed -e s+"[0-9][0-9][0-9]$"++)
  TEMPG=$(cat /sys/class/hwmon/hwmon2/temp1_input 2>/dev/null | sort -rn | head -1 | sed -e s+"[0-9][0-9][0-9]$"++)
else
  TEMPE=$(cat /sys/devices/virtual/thermal/thermal_zone*/temp 2>/dev/null | sort -rn | head -1 | sed -e s+"[0-9][0-9][0-9]$"++)
fi

echo "OPERATING SYSTEM: ${V_OS}"
echo "DEVICE: ${V_DEVICE}"
echo "CPU: ${V_CPUMODEL1} (${V_CPUNB} Cores)"
if test -n "${TEMPE}"
then
  echo "CPU TEMPERATURE: ${TEMPE}°"
fi
if test -n "${TEMPG}"
then
  echo "GPU TEMPERATURE: ${TEMPG}°"
fi
if test -n "${V_CPUFREQ}"
then
  echo "CURRENT FREQUENCY: ${V_CPUFREQ}MHz"
  echo "MAXIMUM FREQUENCY: ${V_CPUMAXFREQ}MHz"
else
  echo "CURRENT FREQUENCY (BIG): ${V_CPUFREQB}MHz"
  echo "MAXIMUM FREQUENCY (BIG): ${V_CPUMAXFREQB}MHz"
  echo "CURRENT FREQUENCY (LITTLE): ${V_CPUFREQL}MHz"
  echo "MAXIMUM FREQUENCY (LITTLE): ${V_CPUMAXFREQL}MHz"
fi
ram_mem=$(free -m)
# Extract total and free memory values
total_memory=$(echo "$ram_mem" | awk '/Mem:/ {print $2}')
free_memory=$(echo "$ram_mem" | awk '/Mem:/ {print $4}')
# Convert total memory to GB
total_memory_gb=$(echo "scale=2; $total_memory / 1024" | bc)
# Print the formatted output
echo "RAM: ${free_memory}MB/${total_memory_gb}GB"
echo "KERNEL: ${V_SYSTEM} (${V_ARCH})"
echo "OS ARCHITECTURE: ${V_OSARCH}"
echo "OS BUILD ID: ${BUILD_ID:0:7}"
if test -n "${BATT}"
then
    echo "BATTERY: ${BATT}%"
fi