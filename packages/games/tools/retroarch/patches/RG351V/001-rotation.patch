diff --git a/gfx/drivers_context/drm_go2_ctx.c b/gfx/drivers_context/drm_go2_ctx.c
index 856aa0f9a2..06fc2f0890 100644
--- a/gfx/drivers_context/drm_go2_ctx.c
+++ b/gfx/drivers_context/drm_go2_ctx.c
@@ -118,8 +118,8 @@ static void *gfx_ctx_go2_drm_init(void *video_driver)
 
    drm->display       = go2_display_create();
 
-   drm->native_width  = go2_display_height_get(drm->display);
-   drm->native_height = go2_display_width_get(drm->display);
+   drm->native_width  = go2_display_width_get(drm->display);
+   drm->native_height = go2_display_height_get(drm->display);
 
    /* This driver should only be used on rotated screens */
    if (drm->native_width < drm->native_height)
@@ -131,7 +131,7 @@ static void *gfx_ctx_go2_drm_init(void *video_driver)
    }
 
    drm->presenter     = go2_presenter_create(drm->display,
-         DRM_FORMAT_RGB565, 0xff000000, true);
+         DRM_FORMAT_XRGB8888, 0xff000000, true);
 
    return drm;
 }
@@ -345,8 +345,8 @@ static void gfx_ctx_go2_drm_swap_buffers(void *data)
    go2_presenter_post(drm->presenter,
          surf,
          src_x, src_y, src_w, src_h,
-         out_y, out_x, out_h, out_w,
-         GO2_ROTATION_DEGREES_270, 2);
+         out_x, out_y, out_w, out_h,
+         GO2_ROTATION_DEGREES_90, 2);
    go2_context_surface_unlock(drm->context, surf);
 #endif
 }
